use boostvoronoi::voronoi_builder::VoronoiBuilder;
use boostvoronoi::InputType;
use geo::{Coordinate, Line};
use std::ops::Neg;

type I1 = i32;
type F1 = f64;
type I2 = i64;
type F2 = f64;

#[allow(dead_code)]
fn almost_equal(x1: F1, x2: F1, y1: F1, y2: F1) -> bool {
    let delta = 0.0001;
    assert!(F1::abs(x1 - x2) < delta, "{} != {}", x1, x2);
    assert!(F1::abs(y1 - y2) < delta, "{} != {}", y1, y2);

    (F1::abs(x1 - x2) < delta) && (F1::abs(y1 - y2) < delta)
}

fn to_points<T>(points: &[[T; 2]]) -> Vec<Coordinate<T>>
where
    T: InputType + Neg<Output = T>,
{
    let mut rv = Vec::with_capacity(points.len());
    for p in points.iter() {
        rv.push(Coordinate::<T> { x: p[0], y: p[1] });
    }
    rv
}

fn to_segments<T>(points: &[[T; 4]]) -> Vec<Line<T>>
where
    T: InputType + Neg<Output = T>,
{
    let mut rv = Vec::with_capacity(points.len());
    for p in points.iter() {
        rv.push(Line::<T>::new(
            Coordinate { x: p[0], y: p[1] },
            Coordinate { x: p[2], y: p[3] },
        ));
    }
    rv
}

#[ignore]
#[test]
/// The rust logo
fn large_segment_1() {
    let output = {
        let points: [[I1; 2]; 0] = [];
        let segments: [[i32; 4]; 355] = [
            [403, 0, 395, 1],
            [409, 4, 403, 0],
            [481, 8, 473, 7],
            [325, 7, 318, 9],
            [332, 10, 325, 7],
            [486, 14, 481, 8],
            [318, 9, 314, 14],
            [257, 31, 250, 29],
            [556, 32, 548, 29],
            [250, 29, 243, 33],
            [560, 38, 556, 32],
            [395, 1, 369, 39],
            [431, 39, 409, 4],
            [360, 40, 332, 10],
            [473, 7, 440, 40],
            [369, 39, 360, 40],
            [440, 40, 431, 39],
            [501, 52, 486, 14],
            [314, 14, 300, 52],
            [290, 54, 257, 31],
            [548, 29, 510, 54],
            [510, 54, 501, 52],
            [300, 52, 290, 54],
            [188, 66, 180, 66],
            [625, 69, 618, 65],
            [180, 66, 174, 71],
            [393, 71, 405, 71],
            [382, 77, 393, 71],
            [628, 76, 625, 69],
            [405, 71, 416, 78],
            [567, 78, 560, 38],
            [243, 33, 233, 78],
            [233, 78, 225, 83],
            [575, 83, 567, 78],
            [225, 83, 188, 66],
            [618, 65, 575, 83],
            [376, 88, 382, 77],
            [416, 78, 422, 89],
            [627, 92, 628, 76],
            [376, 100, 376, 88],
            [422, 89, 422, 101],
            [627, 106, 627, 92],
            [382, 111, 376, 100],
            [422, 101, 415, 111],
            [454, 110, 475, 114],
            [314, 117, 346, 110],
            [127, 114, 119, 115],
            [682, 116, 674, 114],
            [174, 71, 174, 117],
            [626, 117, 627, 106],
            [392, 117, 382, 111],
            [415, 111, 404, 117],
            [404, 117, 392, 117],
            [685, 120, 682, 116],
            [119, 115, 114, 121],
            [475, 114, 516, 128],
            [174, 117, 166, 123],
            [634, 123, 626, 117],
            [284, 129, 314, 117],
            [166, 123, 127, 114],
            [674, 114, 634, 123],
            [686, 127, 685, 120],
            [255, 143, 284, 129],
            [516, 128, 553, 148],
            [346, 110, 384, 150],
            [229, 160, 255, 143],
            [406, 153, 454, 110],
            [384, 150, 395, 155],
            [395, 155, 406, 153],
            [553, 148, 587, 172],
            [114, 121, 123, 166],
            [677, 166, 686, 127],
            [204, 180, 229, 160],
            [683, 174, 677, 166],
            [123, 166, 117, 174],
            [117, 174, 76, 172],
            [724, 172, 683, 174],
            [730, 175, 724, 172],
            [76, 172, 69, 175],
            [734, 180, 730, 175],
            [69, 175, 66, 181],
            [587, 172, 617, 201],
            [734, 188, 734, 180],
            [66, 181, 66, 188],
            [182, 202, 204, 180],
            [495, 202, 182, 202],
            [507, 204, 495, 202],
            [617, 201, 643, 234],
            [717, 225, 734, 188],
            [66, 188, 83, 225],
            [536, 213, 507, 204],
            [722, 233, 717, 225],
            [83, 225, 78, 233],
            [643, 234, 654, 252],
            [78, 233, 38, 240],
            [762, 240, 722, 233],
            [38, 240, 32, 243],
            [768, 243, 762, 240],
            [32, 243, 29, 250],
            [771, 251, 768, 243],
            [29, 250, 31, 257],
            [769, 257, 771, 251],
            [594, 265, 565, 230],
            [105, 288, 118, 286],
            [680, 287, 692, 289],
            [118, 286, 129, 290],
            [746, 290, 769, 257],
            [31, 257, 54, 290],
            [668, 291, 680, 287],
            [746, 291, 746, 290],
            [161, 291, 202, 291],
            [601, 300, 594, 265],
            [202, 291, 202, 478],
            [654, 252, 634, 299],
            [162, 294, 161, 291],
            [334, 293, 334, 348],
            [334, 293, 434, 293],
            [434, 293, 437, 293],
            [96, 296, 105, 288],
            [692, 289, 702, 297],
            [54, 290, 52, 296],
            [52, 296, 52, 297],
            [137, 300, 129, 290],
            [661, 301, 668, 291],
            [52, 297, 52, 300],
            [748, 300, 746, 291],
            [437, 293, 460, 304],
            [91, 307, 96, 296],
            [702, 297, 706, 308],
            [137, 300, 139, 312],
            [659, 313, 661, 301],
            [52, 300, 14, 314],
            [787, 314, 748, 300],
            [634, 299, 625, 318],
            [93, 319, 91, 307],
            [460, 304, 469, 322],
            [706, 308, 704, 320],
            [14, 314, 8, 319],
            [792, 320, 787, 314],
            [173, 323, 162, 294],
            [139, 312, 134, 323],
            [663, 325, 659, 313],
            [793, 326, 792, 320],
            [8, 319, 7, 327],
            [592, 334, 601, 300],
            [101, 329, 93, 319],
            [625, 318, 625, 330],
            [704, 320, 696, 330],
            [134, 323, 125, 331],
            [673, 332, 663, 325],
            [790, 332, 793, 326],
            [170, 334, 173, 323],
            [112, 333, 101, 329],
            [125, 331, 112, 333],
            [696, 330, 685, 334],
            [469, 322, 462, 337],
            [685, 334, 673, 332],
            [625, 330, 630, 339],
            [163, 342, 170, 334],
            [109, 366, 163, 342],
            [462, 337, 440, 346],
            [440, 346, 430, 348],
            [430, 348, 334, 348],
            [7, 327, 40, 360],
            [760, 360, 790, 332],
            [630, 339, 690, 368],
            [761, 368, 760, 360],
            [556, 373, 592, 334],
            [690, 368, 691, 368],
            [761, 369, 761, 368],
            [40, 360, 39, 369],
            [541, 383, 556, 373],
            [107, 387, 109, 366],
            [39, 369, 4, 391],
            [761, 369, 796, 391],
            [558, 397, 541, 383],
            [800, 396, 796, 391],
            [4, 391, 0, 397],
            [567, 406, 558, 397],
            [800, 403, 800, 396],
            [0, 397, 1, 405],
            [571, 411, 567, 406],
            [796, 409, 800, 403],
            [574, 417, 571, 411],
            [691, 368, 692, 419],
            [578, 424, 574, 417],
            [109, 425, 107, 387],
            [692, 419, 661, 419],
            [661, 419, 658, 422],
            [334, 427, 412, 427],
            [334, 481, 334, 427],
            [412, 427, 418, 428],
            [761, 431, 796, 409],
            [1, 405, 39, 431],
            [584, 441, 578, 424],
            [418, 428, 436, 436],
            [658, 422, 657, 445],
            [760, 440, 761, 431],
            [39, 431, 40, 440],
            [112, 452, 109, 425],
            [436, 436, 453, 459],
            [453, 459, 456, 467],
            [657, 445, 650, 467],
            [590, 466, 584, 441],
            [40, 440, 10, 468],
            [790, 468, 760, 440],
            [118, 478, 112, 452],
            [598, 474, 590, 466],
            [793, 475, 790, 468],
            [10, 468, 7, 475],
            [650, 467, 635, 477],
            [202, 478, 118, 478],
            [616, 479, 598, 474],
            [635, 477, 616, 479],
            [407, 481, 334, 481],
            [791, 482, 793, 475],
            [407, 481, 407, 481],
            [7, 475, 9, 483],
            [408, 483, 407, 481],
            [408, 483, 408, 483],
            [786, 486, 791, 482],
            [748, 501, 786, 486],
            [9, 483, 52, 501],
            [746, 510, 748, 501],
            [52, 501, 54, 510],
            [456, 467, 468, 522],
            [468, 522, 471, 534],
            [54, 510, 31, 543],
            [771, 548, 746, 510],
            [31, 543, 29, 549],
            [29, 549, 32, 556],
            [768, 556, 771, 548],
            [471, 534, 490, 560],
            [32, 556, 38, 560],
            [762, 560, 768, 556],
            [722, 567, 762, 560],
            [38, 560, 78, 567],
            [408, 569, 408, 483],
            [490, 560, 508, 571],
            [408, 570, 408, 569],
            [508, 571, 512, 571],
            [406, 571, 408, 570],
            [406, 571, 406, 571],
            [633, 571, 636, 571],
            [164, 571, 406, 571],
            [512, 571, 633, 571],
            [78, 567, 83, 575],
            [717, 575, 722, 567],
            [248, 591, 190, 601],
            [556, 591, 545, 593],
            [728, 598, 717, 575],
            [258, 595, 248, 591],
            [636, 571, 611, 600],
            [545, 593, 536, 601],
            [190, 601, 164, 571],
            [611, 600, 609, 603],
            [264, 604, 258, 595],
            [609, 603, 556, 591],
            [83, 575, 66, 612],
            [734, 612, 728, 598],
            [734, 620, 734, 612],
            [66, 612, 66, 620],
            [218, 621, 230, 622],
            [567, 623, 580, 622],
            [731, 625, 734, 620],
            [66, 620, 70, 625],
            [207, 627, 218, 621],
            [580, 622, 591, 628],
            [230, 622, 240, 629],
            [70, 625, 76, 628],
            [724, 628, 731, 625],
            [76, 628, 117, 626],
            [683, 626, 724, 628],
            [557, 630, 567, 623],
            [681, 629, 683, 626],
            [117, 626, 123, 634],
            [677, 634, 681, 629],
            [200, 637, 207, 627],
            [591, 628, 597, 638],
            [240, 629, 246, 640],
            [552, 641, 557, 630],
            [199, 650, 200, 637],
            [597, 638, 598, 651],
            [275, 654, 264, 604],
            [246, 640, 245, 652],
            [552, 653, 552, 641],
            [205, 661, 199, 650],
            [598, 651, 592, 662],
            [245, 652, 239, 662],
            [559, 663, 552, 653],
            [277, 663, 275, 654],
            [286, 667, 277, 663],
            [536, 601, 521, 664],
            [215, 667, 205, 661],
            [228, 668, 239, 662],
            [592, 662, 582, 668],
            [570, 669, 559, 663],
            [228, 668, 215, 667],
            [582, 668, 570, 669],
            [123, 634, 114, 673],
            [521, 664, 483, 678],
            [326, 681, 286, 667],
            [686, 679, 677, 634],
            [114, 673, 115, 681],
            [626, 683, 634, 677],
            [166, 677, 174, 683],
            [681, 685, 686, 679],
            [115, 681, 121, 686],
            [483, 678, 442, 687],
            [634, 677, 673, 686],
            [673, 686, 681, 685],
            [121, 686, 166, 677],
            [367, 688, 326, 681],
            [442, 687, 421, 689],
            [389, 690, 367, 688],
            [421, 689, 389, 690],
            [567, 722, 575, 717],
            [225, 717, 233, 722],
            [174, 683, 172, 724],
            [626, 729, 626, 683],
            [172, 724, 175, 730],
            [188, 734, 225, 717],
            [575, 717, 612, 734],
            [620, 734, 626, 729],
            [175, 730, 181, 735],
            [181, 735, 188, 734],
            [612, 734, 620, 734],
            [501, 748, 510, 746],
            [290, 746, 300, 748],
            [233, 722, 240, 762],
            [560, 762, 567, 722],
            [360, 760, 369, 761],
            [431, 761, 440, 760],
            [557, 768, 560, 762],
            [240, 762, 244, 768],
            [510, 746, 543, 769],
            [550, 771, 557, 768],
            [244, 768, 252, 771],
            [252, 771, 290, 746],
            [543, 769, 550, 771],
            [300, 748, 314, 786],
            [486, 786, 501, 748],
            [440, 760, 468, 790],
            [331, 791, 360, 760],
            [314, 786, 318, 791],
            [481, 792, 486, 786],
            [468, 790, 474, 793],
            [318, 791, 324, 793],
            [324, 793, 331, 791],
            [474, 793, 481, 792],
            [369, 761, 391, 796],
            [405, 799, 431, 761],
            [391, 796, 397, 800],
            [397, 800, 405, 799],
            [565, 230, 536, 213],
        ];

        let _v = to_points::<I1>(&points);
        let _s = to_segments::<I1>(&segments);

        let mut vb = VoronoiBuilder::<I1, F1, I2, F2>::new();
        vb.with_vertices(_v.iter()).expect("large_segment_1");
        vb.with_segments(_s.iter()).expect("large_segment_1");
        vb.construct().expect("large_segment_1")
    };
    assert_eq!(output.cells().len(), 704);
    assert_eq!(output.vertices().len(), 1318);
    assert_eq!(output.edges().len(), 4042);
    // The 'small' generated test code got too large for the compiler.
}
